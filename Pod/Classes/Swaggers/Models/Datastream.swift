//
// Datastream.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** A datastream groups a collection of observations that are related in some way. The one constraint is that the observations in a datastream must measure the same observed property (i.e., one phenomenon). */
public class Datastream: JSONEncodable {
    /** ID is the system-generated identifier of an entity. ID is unique among the entities of the same entity type. */
    public var iotId: AnyObject?
    /** Self-Link is the absolute URL of an entity which is unique among all other entities. */
    public var iotSelfLink: String?
    /** Navigation-Link is the relative URL that retrives content of related entities. */
    public var iotNavigationLink: String?
    /** This is the description of the datastream entity. The content is open to support other description languages. */
    public var description: String?
    /** A thing can have zero-to-many datastreams. A datastream entity can only link to a thing as a collection of observations or properties. */
    public var thing: Thing?
    /** The observations of a datastream observe the same observedProperty. The observations of different datastreams could observe the same observedProperty. */
    public var observedProperty: ObservedProperty?
    /** A datastream can have zero-to-many observations. One observation must occur in one and only one datastream. */
    public var observations: [Observation]?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["@iot.id"] = self.iotId
        nillableDictionary["@iot.selfLink"] = self.iotSelfLink
        nillableDictionary["@iot.navigationLink"] = self.iotNavigationLink
        nillableDictionary["Description"] = self.description
        nillableDictionary["Thing"] = self.thing?.encodeToJSON()
        nillableDictionary["ObservedProperty"] = self.observedProperty?.encodeToJSON()
        nillableDictionary["Observations"] = self.observations?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
